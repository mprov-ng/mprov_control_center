jobs 
- Name
- create time
- start time
- end time
- last update
- return code
- module
- action
- params
- status

job-modules
- Name
- active

job-servers
- Name
- address
- heartbeat time

jobqueue
- part of mPCC.  Handles the queuing of jobs to the queue that the jobserver watches
- only queues jobs if a jobserver is active on that module
- job server must register with mPCC to aquire jobs.
- job server must send a heartbeat to mPCC within a time frame or will be expired.
- any jobqueue request checks for expired servers before taking action
- if all active job servers for a module are expired, should we clear jobs for that module?


job server
- checks for new jobs with table read/write lock
- if new jobs are found, send off to the modules in question.
- server marks job as 'pending' then hands off to the module (thread)
- when the module starts it, update to 'running'
- once the server is done updating all handed off jobs to 'pending' release the locl(s)
- modules will be able to get their rows, lock them to update, and update them once they start.

job server notes
- job servers can be multiple machines with different modules.
- this also means that the different services, dhcp, dns, pxe, etc can run on different machines each with an mProv job server.
- job server needs to have a way to "expire" or notify of pending jobs that don't get picked update
- job server talks to mPCC through the json RESTFul API
- a job server has to start and "active" a module before it can be queued for jobs in the queue.  
    - More than one job server can run on a module.  Each job server that actives a module  increments its 'active' count in the db.
